=============================================================================================================
                                      ------------------------------------
                                      <<<<<<<   1- Introduction    >>>>>>>
                                      ------------------------------------
- HTML code is made up with elements, each one of them often have two tags and maybe one.
- Each element acts like a container that tells the browser info about the information between its two tags.

// Basic elements
- <html> element indicates that the enclosing elements are treated as html code.
- <head> element  includes the information about the page "meta data for the page".
- <body> element indicates that the enclosing elements are put in the main browser window "things that appear into your web page".
- <h1> element is the main heading tag in the document.
- <title> elements is put in the head section and refers to the title of the page that appears on the page tab.

// Attributes
- Attributes provides additional info about the content of the element, it is put in the opening tag.
- You can declare an attribute by using <tag attribute="Value"></tag>
- Example: lang="fr" // lang attribute refers to the language of the text in the element.

//Structural VS Semantic elements
- Structural elements is used just to structure a web page element like a paragraph or a list.
- Semantic elements is not intended to affect the structure of the web page but it adds more information about the element. 
  It helps with SEO and Screen readers. It also helps adding more hooks for html elements to be used by CSS.
# You shouldn't use the semantic tags to style the text. Use it only to give the text a meaning you want.
=============================================================================================================
                                        ----------------------------
                                        <<<<<<<   2- Text    >>>>>>>
                                        ----------------------------
- <h1> ... <h6> "from larger to smaller". "Heading : affects SEO". h1 is the main header in your page. //Block level elements.
- <p> is a paragraph tag. Browser will automatically views it in a single line.

// Inline level elements
- <i>, <em>       "Italic"
- <b>, <strong>   "Bold" 
- <ins>      "Underlined or inserted" 
- <small>         "Small text"
- <mark>          "Highlight" 
- <sub>           "Sub text" 
- <sub>           "Super text" 
- <del>           "Strike-out text"

! When the browser comes across two, more white spaces or even a line break, It only shows one space. That is known as "White space collapsing".

// Breaks and Horizontal lines 
- <br /> adding a line break inside a paragraph.
- <hr /> creates a horizontal rule "line" to split the content.

! There are some elements that don't include any words and usually have one tag between them called "Empty tags" or "Self closing tags".

- <blockquote> is a semantic tag that tells the browser that is a quote. The text will be indented. 
  It helps to get the quotatins in your site with the search engines.
  % cite="who-said-the-quote"

- <q> is used when making short inline quotation.

- <abbr> is used for abbriviations.
  % title="full-term"
  * <abbr title="professor">Prof</abbr>

- <acronym> is used for the terms with the first character of each word in an expression.
  % title="full-term"

! HTML5 use only <abbr> for both abbreviations and acronyms.

- <cite> is used when referencing a piece of work such as a book or a film. It is rendered as italic text.
- <dfn> is used when adding a new terminology "definition instance"
- <address> is used to contain the conatct info of the page author like physical address or email.
=============================================================================================================
                                        -----------------------------
                                        <<<<<<<   3- Lists    >>>>>>>
                                        -----------------------------
- <li> is used to represent a list item.

// Ordered List
- created using <ol> tag

// Unordered List
- created using <ul> tag

// Definition List
- created using <dl> tag and includes a series of terms and definitions.
- <dt> : definition term.
- <dd> : definition itself.

! A nested lists can be made by defining a new list within the <li> tag.
=============================================================================================================
                                        -----------------------------
                                        <<<<<<<   4- Links    >>>>>>>
                                        -----------------------------
- A link is defined using <a> tags "anchor tags".

- <a> The text that user clicks on</a>
  % href="URL"
  % target="_self"  >> opens the link in the same tab
           "_blank" >> opens the link in another tab

- Absolute URL is the url that you enters to get the web page directly. "http://google.com"
- Relative URL is the url for a specific page relative to another page in your website, the root directory for example.

// Accessing direcrories in the relative URL
- At the same directory "bisho.html"
- At the child directory "child_dir/bisho.html"
- At the parent directory "../bisho.html".

- To make a link to send an email directly we use href="mailto:example@gmail.com"

// Classes VS IDs
- Id attribute is used as unique identifier for it. The same id can't declare twice or more in the same page.
- Class attribute is used to classify many tags for multiple selection.

- You can go to a specific section with a specific id in the same page by using href="#target_id".
=============================================================================================================
                                        ------------------------------
                                        <<<<<<<   5- Images    >>>>>>>
                                        ------------------------------
- <img> tag used to add an image to your page.
  % src="URL for the image"
  % alt="text for screen readers or if the image can't load"
  % title="text appears when the user hovers over it"

// Block-level VS Inline-level Elements
- Block-level elements always appears on a separate line. It can't have any tag with it on the same line. Like <p> or <h1> tags.
- Multiple inline-level elements can appear on the same line with other inline-level elements or within another block-level elements without requiring to be in a new line.

// Image Preparing
- Use GIF or PNG for the photos that have flat colors "Logos or Illustrations".
- Use JPEG for the photos that have varity of colors "Photographs".

- Images created for the web should be saved at the resolution of 72 ppi.
  Making the images with higher resolution than 72 ppi will result in only a larger image not a higher quality image.

- Vector images are resolution independent. It is created by placing points on a grid and drawing lines between those points.
  You can resize image as you want without affecting the quality of the image.
  Vectors are used in the web using SVG Format "Scalable Vector Graphics".

- You can use <figure> tags to contain images and thier caption.
  <figcaption> tags can relate a caption with the image within <figure> tags.
=============================================================================================================
                                        ------------------------------
                                        <<<<<<<   6- Tables    >>>>>>>
                                        ------------------------------
- <table> tags are used to declare a table. The table is drawn row by row.
- <tr> declaring a table row. It indicates the start of each row.
- <td> declaring a table data "cell". It is usually put within table row.
- <th> declaring a table heading "row or column". It improves the search engines ability to index the pages.
  It also adds more hooks to be used with CSS.
  % scope="col" Indicating that the heading is for a column.
         ="row" Indicating that the heading is for a row

// Spanning
- colspan attribute can be used on <th> or <td> element and indicates how many columns to run across.
- rowspan attribute can be used on <th> or <td> element and indicates how many rows to span down the table.

// Long table
- <thead> includes the heading of the table.
- <tbody> includes the body of the table.
- <tfoot> includes the footer of the table.
! These elements are used to help screen reader improvement and add more hooks to be used with css.
! Another reason for having <thead> and <tfoot> elements is that if the table contents is more than one page, the browser can keep the header and the footer visible and scroll over the table contents.
=============================================================================================================
                                        -----------------------------
                                        <<<<<<<   7- Forms    >>>>>>>
                                        -----------------------------
- The form is sent to the server as key/value pairs.
# You should never change the name of the form control in the page unless you make sure that the server knows the new value.

- <form> tags includes all the form controls.
  % action="URL of the page on the server that will recieve the form pairs"
  % method="GET" //The form pairs will be added to the end of URL. Used for retriving info and for short forms like search box.
    method="POST" //Values are sent through PHP Headers. Used when uploading a file or when using sensitive data.

- <input> tag is used to make a form control to get info from the user.

% Any form control must have "name" attribute to be the key to the value sent to the server
% All text form controls have "placeholder" attribute to make a temporary text before typing. Doesn't work when using "value"
                              "maxlength" attribute to control the max number of characters.
                              "value" attribute to add a default value.

// Form Control Elements
- <input type="text"> used to get plain text.

- <input type="password"> used to get passwords.
  For full security, you should have SSL certification to encrypt the data before sending with http.

- <textarea> Default Text </textarea>
  % wrap="off"  will make a horizontal scroll bar if the text is longer than the area.
    wrap="soft" will make a new line automatically if the text was longer but the input is read without that newline (Default).
    wrap="hard" will make a new line automatically if the text was longer and the input is read with those new lines.

- <input type="radio">
  % value="the value sent to the server if this button is checked"
  % checked. used to indicate which value should be selected by default.
  ! The value of the name attribute must be the same for every radio button in the selection group.

- <input type="checkbox">
  % value="the value sent to the server if this button is checked"
  % checked. used to indicate which value should be selected by default.
  ! If many checkboxes are checked with the same name it will return the value of the last checked one
    If you want to return all the values of them type the name as an array and treat the input as an array.
    e.g. <input name="time[]">

- <select> tags is used to make a select box.
  % multiple. To use multiple selection.
  % size="#". The number of fields shown in the multiple mode.
  ! When multiple selection is used , an array name must be used for the name attribute and it is treated like checkbox.

- <option> Option Name </option> Used to create option within the select box.
  % selected. Used to indicate which value should be selected by default.
  % value="the value sent to the server if this button is selected".

- <input type="file"> Create a browse button that selects a file from the client device.
  ! Form action must be POST. Can't use GET for uploading a file.

- <input type="submit" name="submit_button_name">. Standard submit button.

- <input type="image" name="submit" src="hi.jpg">. Image submit button.

- <button> tags are used to allow users to get more control on their buttons appear. Allow other elements to appear inside them

- <input type="hidden"> Used to sent additional hidden information to the server.
  # never treat hidden inputs as secure.

- <input type="date"> makes a special select box to select a date.

- <input type="email"> The user must enter a valid email. 

- <input type="url"> The user must enter a valid url. 

- <input type="search"> Adds a cross beside the search box to clear the text.

- <input type="color"> Selects a color from the color palette.

- <label> Label text <input element> </label>
  Makes radio buttons and checkboxes selectable when clicking on any text between label tags. Also improve screen readers.
  You can add a caption to the input tags with them.
  ! You can pair a label with id by using the syntax <label for="input-id">Caption</label>

- Best places to add the label associated with an input tag:
  Above or Left : For text, text areas, select boxes and file upload.
  Right : For checkboxes and radiobuttons.

- <fieldset> tags are used to group form controls together. It will render a border around the fieldset.
- <legend> tags are used to specify a caption for a group of the form controls.

// Validation
- Used to reduce the work on the server.
  Make the users see if there is a problem in the form before submitting it to the server.
% required. The user can't submit the form with this field empty.
% title attribute refers to the error message seen when not matching the conditions required.
! You can turn the automatic validation off by using "novalidate" attribute with the element you want.

// General Attributes:
% autocomplete >> Default = "on" can be set to the entire form or a specific input element.
% autofocus >> Default = "off" selects the input element to directly write in it.
% formaction, formmethod, formtarget >> override the form attributes for a specific submit button.
=============================================================================================================
                                    ------------------------------------
                                    <<<<<<<   8- Extra Markup    >>>>>>>
                                    ------------------------------------
- DOCTYPE declaration is used to tell the browser which HTML version to render.
  <!DOCTYPE html>. Renders the page as HTML5 page.

- You can comment a line in HTML by using <!-- Line Commented -->

//Div VS Span
- <div> is just a container to group tags together in a block-level element to select them with css once.
- <span> is the inline-level equivalent of the <div> element. 
- Div is block level element. While Span is inline level element.

// Iframe
- <iframe src="URL"></iframe> //Used to show another web page in the original page. Abbr for Inline Frame.
  % seamless. Used when you don't need scrollbars.

// Meta Tag
- <meta> tag lives inside <head> element. It tells search engines about the page and who created it.
  It's empty tag so it use attributes to carry the information.
  Common attributes used are name, http-equiv and content, the value of the name or http-equiv is the property you are setting and the content attibute has its value.

% name="description" Have page description and commonly used by search engines. It can be a maximum of 155 Chars. Usually displayed in the search engine results.
% name="keywords" Has comma separated values that user might search with. No longer have much effect on SEO nowdays.
% name="robots" If the content has the value "noindex" the page won't be indexed in SE. If "nofollow", It will be indexed but the pages that it links to won't be indexed.

% http-equiv="author". This defines the author for the web page.
% http-equiv="pragma" Used with content="no-cache" to prevent the browser from caching the web page. 
% http-equiv="expires" Used to indicate the caching expire date. The content must be like this "Fri, 04 Apr 2014 23:59:59 GMT".

//HTML Entities
- Takes the form &code; //Example: &copy; for copyright symbol.
# Check the appearance of the symbol after using it as some fonts can't display some symbols.

// More HTML5 elements
- header //For the header of the page.
- footer //For the footer of the page or an article.
- nav //For the navbar or the sidebar of the page "Navigation".
- article //Container for a blog post or an article.
- section //Container for splitting a blog post "for example" to many parts.
- aside //Used for creating secondery tags not so related with the current blog post.
- time //Used to wrap timestamps to give them semantic meaning

# IE < 9 can't recognize HTML5 so we make a comment in the header that only IE can uncomment it.
  <!--[if IE]>
    <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
  <![endif]-->

- You can declare custom data attributes for any tag by using data-attribute="value"
=============================================================================================================