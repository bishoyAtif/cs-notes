=============================================================================================================

                                      -----------------------------
                                      <<<<<<<    General    >>>>>>>
                                      -----------------------------

- <DOCTYPE html> "renders the page as HTML5 page"
- <head></head> has the meta data for your web page.
- <body></body> has the actual content that will appear in your page.
- You can comment a line in HTML by using <!-- Line Commented -->
- You can declare an attribute by using <tag attribute="Value"></tag>

//HTML Entities
- Takes the form &code; //Example: &copy; for copyright symbol.

//Classes VS IDs
- Id is an attribute for a tag and is unique identifier for it.
- Class is an attribute also but it can be used in many tags for multiple selection.

//Target attribute
- You can add a bookmark to your link by using at the end of it #id_required and add the id to the element you want to go to.
=============================================================================================================

                                      -------------------------------
                                      <<<<<<<    Text Tags    >>>>>>>
                                      -------------------------------

- <h1> ... <h6> "Heading : affects SEO". h1 is the most header in your page. h6 is the least. //Block level elements.

//Inline level elements
- <i>, <em>       "Italic"
  <b>, <strong>   "Bold" 
  <u>, <ins>      "Underlined or inserted" 
  <small>         "Small text"
  <mark>          "Highlight" 
  <sub>           "Sub text" 
  <sub>           "Super text" 
  <del>           "Strike-out text"

//Image
- <img> "Show image in the page"
  attr:
    # src="path/to/image"
    # alt="text for screen readers"
    # title="text appears when the mouse points to it" 
    # width="..px" ... height="..px" 

//Anchor tag. Inline Element
- <a> Text appears in the page </a> "Anchor link"
  attr:
    # href="Link or # (id of an element to go in the same page)"
    # target="self >> opens the link in the same tab ... blank >> opens the link in another tab"

//Lists
- <ol type="a, A, I, i"> // Ordered List
- <ul type="circle, square, bullet"></ul> //Unordered list
- <li></li> "List item"

//Dev VS Span
- Dev and Span are just containers to group tags together to select them with css once.
- Dev is block level element. While Span is inline level element.

//Tables
- Declare a table using <table></table>
- Declare a table row using <tr></tr>
- Declare a table data using <td></td>
- Declare a table head using <th></th>
- You can split your table using meaningful tags using <thead></thead> and <tbody></tbody> and put the rows content in them.

//HTML5
- You can use HTML5 Tags to give your page a semantic meaning. It helps with SEO.
- header //For the header of the page.
- footer //For the footer of the page or an article.
- nav //For the navbar or the sidebar of the page "Navigation".
- article //Container for a blog post or an article.
- section //Container for splitting a blog post "for example" to many parts.
- aside //Used for creating secondery tags not so related with the current blog post.
- time //Used to wrap timestamps to give them semantic meaning

//Iframe
- <iframe src=""></iframe> //Used to show another web page in the original page.

//HTML5 With IE
- IE < 9 can't recognize html5 so we make a comment in the header that only IE can uncomment it.
  <!--[if IE]>
    <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
  <![endif]-->

//Custom Data Attributes
- You can declare custom data attributes for any tag by using data-attribute="value"
=============================================================================================================

                                      -----------------------------------
                                      <<<<<<<    Form Elements    >>>>>>>
                                      -----------------------------------

- <form name="form_name" action="target_path" method="POST | GET"> Input Tags </form>

- You can use <fieldset></fieldset> to make a border around the form.

- You can specify a title for your fieldset by using <legend></legend> tag.

- <input type="text" name="field_name" value="default value" placeholder="value" maxlength="num" size="size" >
- title attribute refers to the error message seen when not matching the conditions required.

- <input type="password" name="field_name" >

- <textarea name="field_name" cols="width" rows="height" wrap="type"> Default Text </textarea>
    # type="off" >> will make a horizontal scroll bar if the text is longer than the area.
    # type="soft" >> will make a new line automatically if the text was longer but the input is read 
                               without that newline (Default) 
    # type="hard" >> will make a new line automatically if the text was longer and the input is read with 
                     those new lines

- <input type="checkbox" name="field_name" checked value="value">
    # If many checkboxes are checked with the same name it will return the value of the last checked one
      If you want to return all the values of them type the name as an array and treat the input as an array.
      <input name="time[]">

- <input type="radio" name="time" checked=" | checked">

- <input type="hidden" name="field_name" value="value"> >> used to sent additional information to the user
    # never treat hidden inputs as secure.

- <select name="filed_name" multiple="multiple" size="#">
    <option selected="selected" value="value">Option Name</option>
  </select>
    # size is the number of fields shown in the multiple mode
    # When multiple selection is used , an array name must be used for the name attribute and it is treated   
      like checkbox.

- <label>Label text <input element> </label>
    # Makes radio buttons and checkboxes selectable when clicking on any text between label tags.
    # You can add a caption to the input tags with them.
    # You can pair a label with id by using the syntax <label for="tag-id">Caption</label>

- <input type="submit" name="submit_button_name"> >> Standard submit button
 
- <input type="image" name="submit" src="hi.jpg" width="50" height="" > >> Image submit button

//HTML5 Inputs
- URL //Matching URL form.
- email //Matching an email.
- number. //Can have min, max and step attributes to restrict the input taken.
- week, month, time, datetime.
- color.

//Validation
- Add required attribute make the field required before submitting the form.
- Add email attribute to make the field matches an email before submitting the form.

### General Attributes:
    - autocomplete >> Default = "on" can be set to the entire form or a specific input element.
    - autofocus >> Default = "off" selects the input element todirectly write in it.
    - required >> make sure that the field isn't empty.
    - formaction, formmethod, formtarget >> override the form attributes for a specific submit button.

=============================================================================================================




